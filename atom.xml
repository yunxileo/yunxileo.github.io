<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云稀里</title>
  <subtitle>莫厌追欢笑语频，寻思离乱好伤神。闲来屈指从头数，得见清平有几人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yunxileo.github.io/"/>
  <updated>2017-02-06T02:53:51.571Z</updated>
  <id>http://yunxileo.github.io/</id>
  
  <author>
    <name>yunxileo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>improve R code efficiency</title>
    <link href="http://yunxileo.github.io/2017/02/06/improve-R-code-efficiency/"/>
    <id>http://yunxileo.github.io/2017/02/06/improve-R-code-efficiency/</id>
    <published>2017-02-06T02:42:13.000Z</published>
    <updated>2017-02-06T02:53:51.571Z</updated>
    
    <content type="html">&lt;p&gt;众所周知，当我们利用R语言处理大型数据集时，for循环语句的运算效率非常低。有许多种方法可以提升你的代码运算效率，但或许你更想了解运算效率能得到多大的提升。本文将介绍几种适用于大数据领域的方法，包括简单的逻辑调整设计、并行处理和Rcpp的运用，利用这些方法你可以轻松地处理1亿行以上的数据集。&lt;br&gt;让我们尝试提升往数据框中添加一个新变量过程(该过程中包含循环和判断语句)的运算效率：&lt;/p&gt;
&lt;p&gt;实验环境：&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;R version 3&lt;span class=&quot;selector-class&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.1&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;06&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Platform&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;x86_64-w64-mingw32&lt;/span&gt;/&lt;span class=&quot;selector-tag&quot;&gt;x64&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;-bit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Running&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;under&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;x64&lt;/span&gt; (build &lt;span class=&quot;number&quot;&gt;7601&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Pack&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实验数据集　&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;col1&lt;/span&gt; &amp;lt;- runif (&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;col2&lt;/span&gt; &amp;lt;- rnorm (&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;col3&lt;/span&gt; &amp;lt;- rpois (&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;col4&lt;/span&gt; &amp;lt;- rchisq (&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;df&lt;/span&gt; &amp;lt;- &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;.frame (&lt;span class=&quot;title&quot;&gt;col1&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;col2&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;col3&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;col4&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0-原始方法&quot;&gt;&lt;a href=&quot;#0-原始方法&quot; class=&quot;headerlink&quot; title=&quot;0.原始方法&quot;&gt;&lt;/a&gt;0.原始方法&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;逐行判断该数据框(df)的总和是否大于4，如果该条件满足，则对应的新变量数值为’greaterthan’，否则赋值为’lesserthan’。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# Original R code: Before vectorization and pre-allocation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:nrow(df)) &amp;#123; &lt;span class=&quot;meta&quot;&gt;# for every row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((df[i, &lt;span class=&quot;string&quot;&gt;&#39;col1&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col2&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col3&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col4&#39;&lt;/span&gt;]) &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123; &lt;span class=&quot;meta&quot;&gt;# check &lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; &amp;gt; 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      df[i, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;greater_than_4&quot;&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;# assign 5th column&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      df[i, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;lesser_than_4&quot;&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;# assign 5th column&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 用户   系统   流逝&lt;br&gt;810.11 146.06 965.80 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;1-向量化处理和预设数据库结构&quot;&gt;&lt;a href=&quot;#1-向量化处理和预设数据库结构&quot; class=&quot;headerlink&quot; title=&quot;1.向量化处理和预设数据库结构&quot;&gt;&lt;/a&gt;1.向量化处理和预设数据库结构&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;循环运算前，记得预先设置好数据结构和输出变量的长度和类型，千万别在循环过程中渐进性地增加数据长度。接下来，我们将探究向量化处理是如何提高处理数据的运算速度。&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# after vectorization and pre-allocation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output &amp;lt;- character (nrow(df)) &lt;span class=&quot;comment&quot;&gt;# initialize output vector&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:nrow&lt;/span&gt;(df)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((df[i, &lt;span class=&quot;string&quot;&gt;&#39;col1&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col2&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col3&#39;&lt;/span&gt;] + df[i, &lt;span class=&quot;string&quot;&gt;&#39;col4&#39;&lt;/span&gt;]) &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      output[i] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;greater_than_4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      output[i] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;lesser_than_4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户  系统  流逝&lt;br&gt;28.27  0.05 28.98 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;2-将条件语句的判断条件移至循环外&quot;&gt;&lt;a href=&quot;#2-将条件语句的判断条件移至循环外&quot; class=&quot;headerlink&quot; title=&quot;2.将条件语句的判断条件移至循环外&quot;&gt;&lt;/a&gt;2.将条件语句的判断条件移至循环外&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;将条件判断语句移至循环外可以提升代码的运算速度，接下来本文将利用包含100,000行数据至1,000,000行数据的数据集进行测试：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# after vectorization and pre-allocation, taking the condition checking outside the loop.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output &amp;lt;- character (nrow(df))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;condition &amp;lt;- (df$col1 + df$col2 + df$col3 + df$col4) &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# condition check outside the loop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:nrow&lt;/span&gt;(df)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition[i]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      output[i] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;greater_than_4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      output[i] &amp;lt;- &lt;span class=&quot;string&quot;&gt;&quot;lesser_than_4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户 系统 流逝&lt;br&gt;0.37 0.01 0.39 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;3-只在条件语句为真时执行循环过程&quot;&gt;&lt;a href=&quot;#3-只在条件语句为真时执行循环过程&quot; class=&quot;headerlink&quot; title=&quot;3.只在条件语句为真时执行循环过程&quot;&gt;&lt;/a&gt;3.只在条件语句为真时执行循环过程&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;另一种优化方法是预先将输出变量赋值为条件语句不满足时的取值，然后只在条件语句为真时执行循环过程。此时，运算速度的提升程度取决于条件状态中真值的比例。&lt;br&gt;本部分的测试将和case(2)部分进行比较，和预想的结果一致，该方法确实提升了运算效率。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;output &amp;lt;- c(rep(&amp;quot;lesser_than_4&amp;quot;, nrow(df)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;condition &amp;lt;- (df$col1 + df$col2 + df$col3 + df$col4) &amp;gt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i in (1:nrow(df))[condition]) &amp;#123;  # run loop only for true conditions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (condition[i]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            output[i] &amp;lt;- &amp;quot;greater_than_4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;4-尽可能地使用-ifelse-语句&quot;&gt;&lt;a href=&quot;#4-尽可能地使用-ifelse-语句&quot; class=&quot;headerlink&quot; title=&quot;4.尽可能地使用 ifelse()语句&quot;&gt;&lt;/a&gt;4.尽可能地使用 ifelse()语句&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;利用ifelse()语句可以使你的代码更加简便。ifelse()的句法格式类似于if()函数，但其运算速度却有了巨大的提升。即使是在没有预设数据结构且没有简化条件语句的情况下，其运算效率仍高于上述的两种方法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output &amp;lt;- ifelse ( rowSums(df) &amp;gt; 4, &amp;quot;greater_than_4&amp;quot;, &amp;quot;lesser_than_4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户 系统 流逝 0.08 0.00 0.07  &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;5-使用-which-语句&quot;&gt;&lt;a href=&quot;#5-使用-which-语句&quot; class=&quot;headerlink&quot; title=&quot;5.使用 which()语句&quot;&gt;&lt;/a&gt;5.使用 which()语句&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;利用which()语句来筛选数据集，我们可以达到Rcpp三分之一的运算速率。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  want = which(rowSums(df) &amp;gt; 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output = rep(&amp;quot;less than 4&amp;quot;, times = nrow(df))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output[want] = &amp;quot;greater than 4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# nrow = 3 Million rows (approx)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户 系统 流逝 0.02 0.00 0.01 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;6-利用apply族函数来替代for循环语句&quot;&gt;&lt;a href=&quot;#6-利用apply族函数来替代for循环语句&quot; class=&quot;headerlink&quot; title=&quot;6.利用apply族函数来替代for循环语句&quot;&gt;&lt;/a&gt;6.利用apply族函数来替代for循环语句&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;本部分将利用apply()函数来计算上文所提到的案例，并将其与向量化的循环语句进行对比。该方法的运算效率优于原始方法，但劣于ifelse()和将条件语句置于循环外端的方法。该方法非常有用，但是当你面对复杂的情形时，你需要灵活运用该函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# apply family&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  myfunc &amp;lt;- function(x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ((x[&amp;apos;col1&amp;apos;] + x[&amp;apos;col2&amp;apos;] + x[&amp;apos;col3&amp;apos;] + x[&amp;apos;col4&amp;apos;]) &amp;gt; 4) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;greater_than_4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;lesser_than_4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output &amp;lt;- apply(df[, c(1:4)], 1, FUN=myfunc)  # apply &amp;apos;myfunc&amp;apos; on every row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户 系统 流逝 1.4  0.0  1.4 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;7-利用compiler包中的字节码编译函数cmpfun&quot;&gt;&lt;a href=&quot;#7-利用compiler包中的字节码编译函数cmpfun&quot; class=&quot;headerlink&quot; title=&quot;7.利用compiler包中的字节码编译函数cmpfun()&quot;&gt;&lt;/a&gt;7.利用compiler包中的字节码编译函数cmpfun()&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;这可能不是说明字节码编译有效性的最好例子，但是对于更复杂的函数而言，字节码编译将会表现地十分优异，因此我们应当了解下该函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# byte code compilation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(compiler)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myFuncCmp &amp;lt;- cmpfun(myfunc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output &amp;lt;- apply(df[, c (1:4)], 1, FUN=myFuncCmp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户 系统 流逝 1.10 0.00 1.11  &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;8-利用Rcpp&quot;&gt;&lt;a href=&quot;#8-利用Rcpp&quot; class=&quot;headerlink&quot; title=&quot;8.利用Rcpp&quot;&gt;&lt;/a&gt;8.利用Rcpp&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;截至目前，我们已经测试了好几种提升运算效率的方法，其中最佳的方法是利用ifelse()函数。如果我们将数据量增大十倍，运算效率将会变成啥样的呢？接下来我们将利用Rcpp来实现该运算过程，并将其与ifelse()进行比较。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;library(Rcpp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceCpp(&amp;quot;MyFunc.cpp&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time (output &amp;lt;- myFunc(df))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;see Rcpp function below&lt;/p&gt;
&lt;p&gt;下面是利用C++语言编写的函数代码，将其保存为“MyFunc.cpp”并利用sourceCpp进行调用。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Source for MyFunc.cpp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#include &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rcpp&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [[Rcpp::export]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;CharacterVector &lt;span class=&quot;title&quot;&gt;myFunc&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;DataFrame x&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NumericVector col1 = &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;(x[&lt;span class=&quot;string&quot;&gt;&quot;col1&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NumericVector col2 = &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;(x[&lt;span class=&quot;string&quot;&gt;&quot;col2&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NumericVector col3 = &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;(x[&lt;span class=&quot;string&quot;&gt;&quot;col3&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NumericVector col4 = &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;(x[&lt;span class=&quot;string&quot;&gt;&quot;col4&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = col1.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;CharacterVector &lt;span class=&quot;title&quot;&gt;out&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;[i] = &lt;span class=&quot;string&quot;&gt;&quot;greater_than_4&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;[i] = &lt;span class=&quot;string&quot;&gt;&quot;lesser_than_4&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;9-利用并行运算&quot;&gt;&lt;a href=&quot;#9-利用并行运算&quot; class=&quot;headerlink&quot; title=&quot;9.利用并行运算&quot;&gt;&lt;/a&gt;9.利用并行运算&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;并行运算的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# parallel processing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(foreach)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(doSNOW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cl &amp;lt;- makeCluster(4, type=&amp;quot;SOCK&amp;quot;) # for 4 cores machine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;registerDoSNOW (cl)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;condition &amp;lt;- (df$col1 + df$col2 + df$col3 + df$col4) &amp;gt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# parallelization with vectorization&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;system.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  output &amp;lt;- foreach(i = 1:nrow(df), .combine=c) %dopar% &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (condition[i]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return(&amp;quot;greater_than_4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return(&amp;quot;lesser_than_4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 用户   系统   流逝 186.72   7.13 202.87 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;10-尽早地移除变量并回收内存&quot;&gt;&lt;a href=&quot;#10-尽早地移除变量并回收内存&quot; class=&quot;headerlink&quot; title=&quot;10.尽早地移除变量并回收内存&quot;&gt;&lt;/a&gt;10.尽早地移除变量并回收内存&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;在进行冗长的循环计算前，尽早地将不需要的变量移除掉，使用rm()函数。在每次循环迭代运算结束时利用gc()函数恢复内存也可以提升运算速率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;11-利用内存较小的数据结构&quot;&gt;&lt;a href=&quot;#11-利用内存较小的数据结构&quot; class=&quot;headerlink&quot; title=&quot;11.利用内存较小的数据结构&quot;&gt;&lt;/a&gt;11.利用内存较小的数据结构&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;data.table()是一个很好的例子，因为它可以减少数据的内存，这有助于加快运算速率。&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;.table)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;dt&lt;/span&gt; &amp;lt;- &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;.table(&lt;span class=&quot;title&quot;&gt;df&lt;/span&gt;)  # create the &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;.table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;system&lt;/span&gt;.time(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  for (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:nrow (dt)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((dt[i, col1] + dt[i, col2] + dt[i, col3] + dt[i, col4]) &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dt[i, col5:=&lt;span class=&quot;string&quot;&gt;&quot;greater_than_4&quot;&lt;/span&gt;]  # assign the output &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;th column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dt[i, col5:=&lt;span class=&quot;string&quot;&gt;&quot;lesser_than_4&quot;&lt;/span&gt;]  # assign the output &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;th column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户   系统   流逝 &lt;/p&gt;
&lt;p&gt;629.89   0.31 640.91 &lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;方法：速度， nrow(df)/time_taken = n 行每秒&lt;/p&gt;
&lt;p&gt;原始方法：1X, 856.2255行每秒(正则化为1)&lt;br&gt;向量化方法：738X, 631578行每秒&lt;br&gt;只考虑真值情况：1002X，857142.9行每秒&lt;br&gt;ifelse：1752X，1500000行每秒&lt;br&gt;which：8806X，7540364行每秒&lt;br&gt;Rcpp：13476X，11538462行每秒&lt;/p&gt;
&lt;p&gt;参考链接：(&lt;a href=&quot;http://datascienceplus.com/strategies-to-speedup-r-code/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://datascienceplus.com/strategies-to-speedup-r-code/&lt;/a&gt;)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，当我们利用R语言处理大型数据集时，for循环语句的运算效率非常低。有许多种方法可以提升你的代码运算效率，但或许你更想了解运算效率能得到多大的提升。本文将介绍几种适用于大数据领域的方法，包括简单的逻辑调整设计、并行处理和Rcpp的运用，利用这些方法你可以轻松地处理1
    
    </summary>
    
      <category term="R语言" scheme="http://yunxileo.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="-R语言编程" scheme="http://yunxileo.github.io/tags/R%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Feature Selection</title>
    <link href="http://yunxileo.github.io/2016/09/27/%E7%89%B9%E5%BE%81%E9%80%89%E6%8B%A9/"/>
    <id>http://yunxileo.github.io/2016/09/27/特征选择/</id>
    <published>2016-09-27T07:35:15.000Z</published>
    <updated>2017-02-06T02:54:49.764Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;1-特征选择的概述&quot;&gt;&lt;a href=&quot;#1-特征选择的概述&quot; class=&quot;headerlink&quot; title=&quot;1.特征选择的概述&quot;&gt;&lt;/a&gt;1.特征选择的概述&lt;/h2&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;1-1-特征工程的简介&quot;&gt;&lt;a href=&quot;#1-1-特征工程的简介&quot; class=&quot;headerlink&quot; title=&quot;1.1  特征工程的简介&quot;&gt;&lt;/a&gt;1.1  特征工程的简介&lt;/h3&gt;&lt;p&gt;相信每一个数据人都深刻地体会过这样一句话：“特征工程做不好，调参调到老”。业界更有这样的说法：“数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已”。由此可见，特征工程在机器学习中占有相当重要的地位。到底什么是特征工程，我认为并没有确切的定义，个人是这样理解的：特征工程是利用业务领域和数据科学领域的相关知识，创建使机器学习算法达到最优的特征的过程。特征工程主要包括特征抽取和特征选择两部分。特征抽取主要是依据相关领域知识提取特征，更多的依靠业务知识。下文将重点介绍特征选择。&lt;/p&gt;
&lt;h3 id=&quot;1-2-特征选择的简介&quot;&gt;&lt;a href=&quot;#1-2-特征选择的简介&quot; class=&quot;headerlink&quot; title=&quot;1.2 特征选择的简介&quot;&gt;&lt;/a&gt;1.2 特征选择的简介&lt;/h3&gt;&lt;p&gt;(1) 什么是特征选择&lt;/p&gt;
&lt;p&gt;特征选择 ( Feature Selection )也称特征子集选择( Feature Subset Selection , FSS ) ，或属性选择( Attribute Selection ) ，是指从全部特征中选取一个特征子集，使构造出来的模型更好。&lt;/p&gt;
&lt;p&gt;(2) 为什么要做特征选择&lt;/p&gt;
&lt;p&gt;在机器学习的实际应用中，特征数量往往较多，其中可能存在不相关的特征，特征之间也可能存在相互依赖，容易导致如下的后果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特征个数越多，分析特征、训练模型所需的时间就越长。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;特征个数越多，容易引起“维度灾难”，模型也会越复杂，其推广能力会下降。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;特征选择能剔除不相关(irrelevant)或冗余(redundant )的特征，从而达到减少特征个数，提高模型精确度，减少运行时间的目的。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;选取出真正相关的特征简化了模型，使研究人员易于理解数据产生的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-3-特征选择的过程&quot;&gt;&lt;a href=&quot;#1-3-特征选择的过程&quot; class=&quot;headerlink&quot; title=&quot;1.3 特征选择的过程&quot;&gt;&lt;/a&gt;1.3 特征选择的过程&lt;/h3&gt;&lt;p&gt;Dash和Liu提出了一个特征选择的基本框架，认为一个典型的特征选择&lt;br&gt;算法由图所示的4个基本步骤组成&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/process.png&quot; alt=&quot;特征选择的过程&quot;&gt;&lt;/p&gt;
&lt;p&gt;(1)子集产生：按照一定的搜索策略产生候选特征子集。&lt;/p&gt;
&lt;p&gt;(2)子集评估：通过某个评价函数评估特征子集的优劣。&lt;/p&gt;
&lt;p&gt;(3)停止条件：决定特征选择算法什么时候停止。&lt;/p&gt;
&lt;p&gt;(4)子集验证：用于验证最终所选的特征子集的有效性。&lt;/p&gt;
&lt;p&gt;这四个步骤组成了一个完整的特征选择过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子集产生是一个搜索过程， 用来产生待评价的特征子集。搜索过程的起始点可以是：不含任何特征的空集；含所有特征的全部特征集；随机的一个特征子集。前面两种情况，特征是迭代地添加或移除。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;子集评估过程用于评价特征子集的优劣，即根据某个评价函数对子集进行评价，每进行一次特征子集的优劣评价，将新的评价值和之前保存的最优评价值进行比较，如果新的子集的评价值更优，则用它来取代之前的最优评价值。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;子集评估之后要进行停止条件的判断，如果没有停止条件，搜索过程将无法停止。如图所示，子集产生和子集评估都可能影响到停止条件的选择，基于子集产生的停止条件有：a．达到预先指定的特征数目。b．达到预先给定的迭代次数。基于子集评估的停止条件有：a．增加或减少特征不能使特征子集的评价值有所提高。b．使评价函数取最优解的特征子集已经找到。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;子集有效性验证是特征选择的最后一个步骤，在实际应用中是必不可少的，有效性验证通常用经过特征选择算法处理后的数据集进行训练和预测，将训练和预测的结果和在原始数据集上的结果进行比较，比较的内容包括预测的准确性、模型的复杂程度等。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;2-特征选择常用的方法&quot;&gt;&lt;a href=&quot;#2-特征选择常用的方法&quot; class=&quot;headerlink&quot; title=&quot;2.特征选择常用的方法&quot;&gt;&lt;/a&gt;2.特征选择常用的方法&lt;/h2&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;按照特征子集的形成方式可以分为三种：完全搜索(Complete)、启发式搜索（heuristic）和随机搜索。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;按照特征评价标准来分，根据评价函数与模型的关系，可以分为筛选式、封装式和嵌入式三种。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-1-基于特征子集的形成方式的特征选择方法&quot;&gt;&lt;a href=&quot;#2-1-基于特征子集的形成方式的特征选择方法&quot; class=&quot;headerlink&quot; title=&quot;2.1 基于特征子集的形成方式的特征选择方法&quot;&gt;&lt;/a&gt;2.1 基于特征子集的形成方式的特征选择方法&lt;/h3&gt;&lt;p&gt;基于特征子集的形成方式的特征选择方法主要有完全搜索(Complete)、启发式搜索(Heuristic)和随机搜索。&lt;/p&gt;
&lt;p&gt;特征选择本质上是一个组合优化问题，求解组合优化问题最直接的方法就是搜索，理论上可以通过穷举法来搜索所有可能的特征组合，选择使得评价标准最优的特征子集作为最后的输出。如果我们有N个特征变量，则特征变量的状态集合中的元素个数就是$2^N$，通过穷举的方式进行求解的时间复杂度是指数级的 (O(2^{N} ))。&lt;/p&gt;
&lt;p&gt;为了减少运算量，目前特征子集的搜索策略大都采用贪心算法（greedy algorithm），其核心思想是在每一步选择中，都采纳当前条件下最好的选择，从而获得组合优化问题的近似最优解。根据其实现的细节，又可将贪心算法分为三种：前向搜索 (forward search)，后向搜索(backward search)和双向搜索 (bidirectional search)。&lt;/p&gt;
&lt;p&gt;假定我们有一个特征集合${a_{1},a_{2},...,a_{d}}$,前向搜索的思想是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一步我们可以将每一个特征看成一个候选子集，例如依据给定的评价标准，特征${a_{1}}$的效果最优，则子集为${a_{1}}$,于是将${a_{1}}$做为第一轮的选定集；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第二步，则是往已有的子集中加入下一个效果最优的特征变量，例如对于子集${a_{1},a_{i}}$，当 i=2 时效果最优，则新的子集确定为${a_{1},a_{2}}$。如此重复进行搜索，直到新一轮获得的子集效果不如前一轮，则搜索停止。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后向搜索的做法，是以包含全部特征的集合开始，逐步剔除特征，直到找到效果最优的子集。双向搜索则把前向搜索和后向搜索结合起来，不断在选定的子集中加入新特征，并同时剔除旧特征。&lt;/p&gt;
&lt;p&gt;因为采取的是贪心算法，它们仅考虑使本轮的子集最优，例如在第三轮假定选择$a_{5}$优于$a_{6}$,于是该轮的最优子集为${a_{1},a_{2},a_{5}}$，然后再第四轮中却可能是${a_{1},a_{2},a_{6},a_{8}}$比所有的${a_{1},a_{2},a_{5},a_{i}}$都更优。但是，若不进行穷举搜索，则这样的问题无法避免。&lt;/p&gt;
&lt;p&gt;这三类算法在R语言的stats包和MASS包中的线性回归建模中都实现了。&lt;/p&gt;
&lt;h3 id=&quot;2-2-基于评价准测的特征选择方法&quot;&gt;&lt;a href=&quot;#2-2-基于评价准测的特征选择方法&quot; class=&quot;headerlink&quot; title=&quot;2.2 基于评价准测的特征选择方法&quot;&gt;&lt;/a&gt;2.2 基于评价准测的特征选择方法&lt;/h3&gt;&lt;p&gt;按照特征评价标准来分，根据评价函数与模型的关系，可以分为筛选式、封装式和嵌入式三种。&lt;/p&gt;
&lt;h4 id=&quot;2-2-1-过滤式-Filter&quot;&gt;&lt;a href=&quot;#2-2-1-过滤式-Filter&quot; class=&quot;headerlink&quot; title=&quot;2.2.1 过滤式(Filter)&quot;&gt;&lt;/a&gt;2.2.1 过滤式(Filter)&lt;/h4&gt;&lt;p&gt;通常把先进行特征选择，再进行建模的方法称为过滤式（filter），它主要侧重于单个特征跟目标变量的相关性，此时特征选择的标准和模型优化标准并不一定相同，和下一步将要使用的机器学习算法没有必然联系。&lt;/p&gt;
&lt;p&gt;Dash和Liu把过滤式特征选择的评价标准分为四种，即关联度度量、距离度量、信息度量、以及一致性度量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关联性度量：&lt;br&gt;主要考察特征和类别的关联度以及特征间的关联度，即通常所说的相关性和冗余性。关联性度量有线性关联(如Pearson相关系数)和非线性关联(如基于信息熵的互信息、对称的不确定性等)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;距离度量：运用距离度量进行特征选择是基于这样的假设：好的特征子集应该使得属于同一类的样本距离尽可能小，属于不同类的样本之间的距离尽可能远。常用的距离度量（相似性度量）包括欧氏距离、标准化欧氏距离、马氏距离以及基于概率距离度量的KL散度等。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;信息度量：信息度量是把信息论中基于熵的评估标准应用得到特征选择中，如信息增益(Information Gain)、信息增益率(Information Gain Ratio)、基尼指数(Gini Index)、WOE(Weight of Evidence)以及IV(Informationvalue)等。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;一致性度量：试图找到与全集相同分类能力的最小特征子集。不一致性定义为如果两个样本在选定的特征子集上取值相同，却属于不同的类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面简单地介绍常见的评价函数：&lt;/p&gt;
&lt;p&gt;(1) Pearson相关系数&lt;/p&gt;
&lt;p&gt;Pearson相关系数的数学公式为：$r=\frac{cov(X,Y)}{\sqrt{var(X)var(Y)}}$&lt;/p&gt;
&lt;p&gt;Pearson相关系数是最常用的判断特征和响应变量（response variable）之间的线性关系的标准。结果的取值区间为[-1，1]，-1表示完全的负相关+1表示完全的正相关，0表示没有线性相关。&lt;br&gt;Pearson 相关系数的优点在于其计算简单，结果易于理解且易于比较；而其缺点在于不能反映变量之间的非线性关系,如果关系是非线性的，即便两个变量具有一一对应的关系，Pearson相关性也可能会接近0。&lt;/p&gt;
&lt;p&gt;Python中，Scipy的 pearsonr 方法能够同时计算相关系数和p-value&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from scipy.stats import pearsonr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt; = np.random.normal(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; pearsonr(&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;number&quot;&gt;0.2072&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在R中，用cor函数求相关系数&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt; &amp;lt;- rnorm(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cor(&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;number&quot;&gt;0.132433&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)信息增益(Information Gain)&lt;/p&gt;
&lt;p&gt;假设存在离散变量Y，Y中的取值包括{y1,y2,…,ym} ，yi出现的概率为Pi。则Y的信息熵定义为：&lt;br&gt;
$$H(Y)=-\sum_{i=1}^{m}P_{i}logP_{i}$$&lt;/p&gt;
&lt;p&gt;信息熵有如下特性：若集合Y的元素分布越“纯”，则其信息熵越小；若Y分布越“混乱”，则其信息熵越大。在极端的情况下：若Y只能取一个值，即P1=1，则H(Y)取最小值0；反之若各种取值出现的概率都相等，即都是1/m，则H(Y)取最大值$log_{2}m$。&lt;/p&gt;
&lt;p&gt;在附加条件另一个变量X，而且知道$X=x_{i}$后，Y的条件信息熵(Conditional Entropy)表示为：&lt;br&gt;
$$H(Y|X)=\sum_{i=1}^{m}P_{x=x_{i}}H(Y|X=x_{i})$$
&lt;br&gt;在加入条件X前后的Y的信息增益定义为:&lt;br&gt;
$$IG(Y|X)=H(Y)-H(Y|X)$$
&lt;br&gt;假设存在特征子集A和特征子集B，分类变量为C，若IG( C|A ) &amp;gt; IG( C|B ) ，则认为选用特征子集A的分类结果比B好，因此倾向于选用特征子集A。&lt;/p&gt;
&lt;p&gt;(3)最大信息系数(Mutual information and maximal information coefficient,MIC)&lt;/p&gt;
&lt;p&gt;Pearson相关系数不能反映变量之间的非线性关系；信息增益直接用于特征选择时通常变量需要先离散化，而且信息增益的结果对离散化的方式很敏感。但是最大信息系数克服了这两个问题。它首先寻找一种最优的离散化方式，然后把互信息取值转换成一种度量方式，取值区间在[0，1]。 &lt;/p&gt;
&lt;p&gt;MIC的性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于所有无噪声并且非常数的函数关系，MIC的值都为1&lt;/li&gt;
&lt;li&gt;对于两个有确定的函数关系的随机变量，不论这个函数关系是什么样的，MIC的值都是1&lt;/li&gt;
&lt;li&gt;对于两个统计独立的随机变量MIC的值接近于0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python中，minepy 提供了MIC功能。&lt;/p&gt;
&lt;p&gt;反过头来看$y=x^2$这个例子，MIC算出来的互信息值为1(最大的取值)。&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from minepy import MINE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = MINE()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt; = np.random.normal(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.compute_score(&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; m.mic()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;R中minerva包的mine函数可直计算出mic的值。&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(minerva)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x &amp;lt;- rnorm(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;mine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x,y=x^&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$MIC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出，虽然x与$y=x^2$是函数关系，Pearson相关系数却很相小，但是通过MIC为1可以发现二者之间强烈的非线性关系。&lt;/p&gt;
&lt;p&gt;(4)距离相关系数 (Distance correlation)&lt;/p&gt;
&lt;p&gt;距离相关系数是针对 Pearson 相关系数只能表征线性关系的缺点而提出的。其思想是分别构建特征变量和响应变量的欧氏距离矩阵，并由此计算特征变量和响应变量的距离相关系数。详细的定义和计算过程可参考维基百科。&lt;/p&gt;
&lt;p&gt;距离相关系数能够同时捕捉变量之间的线性和非线性相关。当距离相关系数为 0，则可断言两个变量相互独立（Pearson 相关系数为 0 不代表变量相互独立）。其缺点是与 Pearson 相关系数相比，其所需的运算量较大，而且取值范围为 [0, 1]，无法表征变量之间关联是正相关还是负相关。&lt;/p&gt;
&lt;p&gt;R的 energy 包里提供了距离相关系数的实现&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt; &amp;lt;- rnorm(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dcor(&lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0.5880842&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(5)WOE和IV&lt;/p&gt;
&lt;p&gt;WOE是一种基于目标变量的自变量编码方式，信用评分卡模型中最常用这种编码方式。例如将模型目标标量为1记为违约用户，对于目标变量为0记为正常用户；则WOE(weight of Evidence)其实就是自变量取某个值的时候对违约比例的一种影响。&lt;/p&gt;
&lt;p&gt;WOE的公式：$$woe_{i}=ln(\frac{p_{y=1}}{p_{y=0}})$$&lt;/p&gt;
&lt;p&gt;IV的公式：$$IV_{i}=(p_{y=1}-p_{y=0})\times woe_{i}$$&lt;/p&gt;
&lt;p&gt;那么， $$IV=\sum_{i=1}^{k}IV_{i}$$&lt;/p&gt;
&lt;p&gt;例如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量(age)&lt;/th&gt;
&lt;th&gt;bad(y=1人数)&lt;/th&gt;
&lt;th&gt;good(y=0的人数)&lt;/th&gt;
&lt;th&gt;woe&lt;/th&gt;
&lt;th&gt;IV&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0-18&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;log((10/40)/(50/100))&lt;/td&gt;
&lt;td&gt;{(10/40)-(50/100)}log((10/40)/(50/100))&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18-30&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;log((10/40)/(20/100))&lt;/td&gt;
&lt;td&gt;{(10/40)-(20/100)}log((10/40)/(20/100))&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30-50&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;log((20/40)/(30/100))&lt;/td&gt;
&lt;td&gt;{(20/40)-(30/100)}log((20/40)/(30/100))&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sum&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;表中以age年龄为某个自变量，由于年龄是连续型自变量，需要对其进行离散化处理，假设离散化分为3组，bad和good表示在这三组中违约用户和正常用户的数量分布，可以计算出每一组的WOE值和IV值，通过后面的公式可以看出，woe反映的是在自变量每个分组下违约用户对正常用户占比和总体中违约用户对正常用户占比之间的差异；从而可以直观的认为woe蕴含了自变量取值对于目标变量（违约概率）的影响。&lt;/p&gt;
&lt;p&gt;该变量age的IV值为：&lt;br&gt;
$$IV=\sum_{i=1}^{3}IV_{i}$$
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从公式来看的话，其实IV衡量的是某一个变量的信息量，相当于是自变量woe值的一个加权求和，其值的大小决定了自变量对于目标变量的影响程度&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;从另一个角度来看的话，IV公式与信息熵的公式极其相似。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;变量的IV值表示着该变量对因变量的区分度，IV值越大，该变量的越有价值，从而可以用IV值来进行特征选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-2-2-包裹式-Wrapper&quot;&gt;&lt;a href=&quot;#2-2-2-包裹式-Wrapper&quot; class=&quot;headerlink&quot; title=&quot;2.2.2 包裹式(Wrapper)&quot;&gt;&lt;/a&gt;2.2.2 包裹式(Wrapper)&lt;/h4&gt;&lt;p&gt;而把特征选择和模型优化的标准统一起来的方法则有包裹式（wrapper）和嵌入式（embedding）。包裹式的方法以模型的优化标准作为特征选择的标准，但仍然把特征选择和模型训练分为两个步骤。与过滤式特征选择不考虑后续学习器不同，包裹式特征选择直接把最终将要使用的学习器的性能作为特征子集的评价标准，比如准确率、召回率、AUC值、AIC 准则和 BIC 准则等评价标准。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;赤池信息准则（Akaike information criterion, AIC）&lt;br&gt;$$AIC=2k-2ln(L)$$&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;贝叶斯信息准则（Bayesian Information Criterions, BIC）&lt;br&gt;$$BIC=ln(n)*k-2ln(L)$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中k为参数数目，$L$是似然函数（likelihood function）,n是数据中观测值的数量。&lt;/p&gt;
&lt;p&gt;AIC 和 BIC 的表达式中均包含了模型复杂度惩罚项和最大似然函数项。不同的地方在于，在 BIC 的表达式中，惩罚项的权重随观测值的增加而增加。因此当观测值数量较大时，只有显著关联的特征变量才会被保留，从而降低模型的复杂性。&lt;/p&gt;
&lt;p&gt;在建模时，我们可以通过最小化 AIC 或 BIC 来选择模型的最优参数。由表达式可以看出，AIC 和 BIC 倾向于复杂度低（越小越好）和符合先验假设（越大越好）的模型。在简单线性回归中，似然函数是依据残差服从正态分布的先验假设构建的，即如果特征变量的加入能够使残差更接近正态分布，则认为这个特征能够显著改善线性回归模型。&lt;/p&gt;
&lt;h4 id=&quot;2-2-3-嵌入式-Embedded&quot;&gt;&lt;a href=&quot;#2-2-3-嵌入式-Embedded&quot; class=&quot;headerlink&quot; title=&quot;2.2.3 嵌入式(Embedded)&quot;&gt;&lt;/a&gt;2.2.3 嵌入式(Embedded)&lt;/h4&gt;&lt;p&gt;嵌入式则是把特征选择和模型训练融为一体，两者在同一个优化的过程中完成，不再分为两个步骤，即在学习器训练过程中自动的进行了特征选择。最典型的有L1正则化以及决策树算法，如ID3、C4.5和CART算法等，决策树算法在树增长过程的每个递归步都必须选择一个特征，将样本集划分成较小的子集，选择特征的依据通常是划分后子节点的纯度，划分后子节点越纯，则说明划分效果越好，可见决策树生成的过程也就是特征选择的过程。&lt;/p&gt;
&lt;p&gt;(1) L1正则化 &lt;/p&gt;
&lt;p&gt;在优化理论中，正则化（regularization）是一类通过对解施加先验约束把不适定问题（ill-posed problem）转化为适定问题的常用技巧。例如，在线性回归模型中，当用最小二乘法估计线性回归的系数时，如果自变量存在共线性，系数的估计值将具有较大的方差，因而会影响后续参数的统计检验。如果在最小二乘法的参数估计表达式中添加L1正则项，则称为Lasso线性回归模型：&lt;/p&gt;
&lt;p&gt;$$\widehat{\beta }=arg min_{\beta}[(Y-\beta X)^{T}(Y-\beta X)+\lambda|\beta|]$$&lt;/p&gt;
&lt;p&gt;L1正则化将系数w的L1范数作为惩罚项加到损失函数上，由于正则项非零，这就迫使那些弱的特征所对应的系数变成0。因此L1正则化往往会使学到的模型很稀疏（系数w经常为0），这个特性使得L1正则化成为一种很好的特征选择方法。线性回归有Lasso回归，分类模型有L1逻辑回归。&lt;/p&gt;
&lt;p&gt;(2) 基于树的模型&lt;/p&gt;
&lt;p&gt;基于树的模型，如随机森林、GBDT、XGBOOST等都可以输出变量的重要度，从而达到特征选择的作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平均不纯度减少 (mean decrease impurity)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;决策树中的每一个节点都是关于某个特征的条件，为的是将数据集按照不同的响应变量一分为二。利用不纯度可以确定节点（最优条件），对于分类问题，通常采用基尼不纯度或者信息增益 ，对于回归问题，通常采用的是方差或者最小二乘拟合。当训练决策树的时候，可以计算出每个特征减少了多少树的不纯度。对于一个决策树森林来说，可以算出每个特征平均减少了多少不纯度，并把它平均减少的不纯度作为特征选择的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平均精确率减少 (Mean decrease accuracy)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另一种常用的特征选择方法就是直接度量每个特征对模型精确率的影响。主要思路是打乱每个特征的特征值顺序，并且度量顺序变动对模型的精确率的影响。很明显，对于不重要的变量来说，打乱顺序对模型的精确率影响不会太大，但是对于重要的变量来说，打乱顺序就会降低模型的精确率。&lt;/p&gt;
&lt;p&gt;(3)递归特征消除 (Recursive feature elimination ,RFE)&lt;/p&gt;
&lt;p&gt;递归特征消除的主要思想是反复的构建模型（如SVM或者回归模型）然后选出最好的（或者最差的）的特征（可以根据系数来选），把选出来的特征放到一边，然后在剩余的特征上重复这个过程，直到所有特征都遍历了。这个过程中特征被消除的次序就是特征的排序。因此，这是一种寻找最优特征子集的贪心算法。&lt;/p&gt;
&lt;p&gt;RFE的稳定性很大程度上取决于在迭代的时候底层用哪种模型。例如，假如RFE采用的普通的回归，没有经过正则化的回归是不稳定的，那么RFE就是不稳定的；假如采用的是Ridge，而用Ridge正则化的回归是稳定的，那么RFE就是稳定的。&lt;/p&gt;
&lt;p&gt;Python 的 scikit-learn 模块中提供了一种循环特征剔除 (recursive feature elimination, RFE) 的实现，遵循的也是后向搜索的思路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;3-代码演练&quot;&gt;&lt;a href=&quot;#3-代码演练&quot; class=&quot;headerlink&quot; title=&quot;3  代码演练&quot;&gt;&lt;/a&gt;3  代码演练&lt;/h2&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;1-基于前向搜索、后向搜索和双向搜索的回归模型在R中的实现：&quot;&gt;&lt;a href=&quot;#1-基于前向搜索、后向搜索和双向搜索的回归模型在R中的实现：&quot; class=&quot;headerlink&quot; title=&quot;(1) 基于前向搜索、后向搜索和双向搜索的回归模型在R中的实现：&quot;&gt;&lt;/a&gt;(1) 基于前向搜索、后向搜索和双向搜索的回归模型在R中的实现：&lt;/h3&gt;&lt;p&gt; 这三类算法在R语言的stats包和MASS包中的线性回归建模中都实现了。&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;library(MASS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;initial &amp;lt;- glm(Class ~ tau + VEGF + E4 + IL_3, data = training, family = binomial)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stepAIC(initial, direction = &quot;both&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Start: AIC=189.46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class ~ tau + VEGF + E4 + IL_3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Df Deviance AIC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; IL_3 &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;179.69&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;187.69&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; E4 &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;179.72&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;187.72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;lt;none&amp;gt; 179.46 189.46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; VEGF &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;242.77&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;250.77&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; tau &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;288.61&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;296.61&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Step: AIC=187.69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class ~ tau + VEGF + E4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Df Deviance AIC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; E4 &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;179.84&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;185.84&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;lt;none&amp;gt; 179.69 187.69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ IL_3 1 179.46 189.46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; VEGF &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;248.30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;254.30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; tau &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;290.05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;296.05&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Step: AIC=185.84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class ~ tau + VEGF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Df Deviance AIC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;none&amp;gt; 179.84 185.84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ E4 1 179.69 187.69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ IL_3 1 179.72 187.72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; VEGF &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255.07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;259.07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; tau &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;300.69&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;304.69&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call: glm(formula = Class ~ tau + VEGF, family = binomial, data = training)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Coefficients:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Intercept) tau VEGF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9.8075 -4.2779 0.9761&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Degrees of Freedom: 266 Total (i.e. Null); 264 Residual&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Null Deviance: 313.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Residual Deviance: 179.8 AIC: 185.8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基于AIC准则，通过双向搜索我们得到了最优的分类模型。&lt;/p&gt;
&lt;h3 id=&quot;2-基于IV的特征变量选择在R中的实现：&quot;&gt;&lt;a href=&quot;#2-基于IV的特征变量选择在R中的实现：&quot; class=&quot;headerlink&quot; title=&quot;(2) 基于IV的特征变量选择在R中的实现：&quot;&gt;&lt;/a&gt;(2) 基于IV的特征变量选择在R中的实现：&lt;/h3&gt;&lt;p&gt;在R中，smbinning包可以做变量的分箱、计算woe以及IV。用其自带数据集举例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Package loading &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; data exploration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(smbinning) # Load package &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; its data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data(chileancredit) # Load smbinning sample dataset (Chilean Credit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str(chileancredit) # Quick description of the data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;data.frame&#39;&lt;/span&gt;:	&lt;span class=&quot;number&quot;&gt;7702&lt;/span&gt; obs. of  &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;variables&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ CustomerId       &lt;span class=&quot;comment&quot;&gt;: chr&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;&quot;0000000185&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0000000238&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0000000346&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0000000460&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt; ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ TOB              &lt;span class=&quot;comment&quot;&gt;: int  44 79 102 NA 109 183 172 76 136 171 ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ IncomeLevel      &lt;span class=&quot;comment&quot;&gt;: Factor w&lt;/span&gt;/ &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; levels &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;,..: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ Bal01            : num  &lt;span class=&quot;number&quot;&gt;605&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1006&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;299&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;645&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;218&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin01       : Factor w/&lt;span class=&quot;comment&quot;&gt; 7 levels&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,..: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin02       &lt;span class=&quot;comment&quot;&gt;: Factor w&lt;/span&gt;/ &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; levels &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;,..: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin03       : Factor w/&lt;span class=&quot;comment&quot;&gt; 8 levels&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,..: 1 1 1 1 1 1 1 2 1 1 ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin04       &lt;span class=&quot;comment&quot;&gt;: Factor w&lt;/span&gt;/ &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; levels &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;,..: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin05       : Factor w/&lt;span class=&quot;comment&quot;&gt; 8 levels&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,..: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MaxDqBin06       &lt;span class=&quot;comment&quot;&gt;: Factor w&lt;/span&gt;/ &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; levels &lt;span class=&quot;comment&quot;&gt;&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;&quot;3&quot;&lt;/span&gt;,..: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ MtgBal01         : num  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq01: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq02: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq03: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq04: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq05: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ NonBankTradesDq06: int  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ FlagGB           : int  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; $ FlagSample       : int  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;(chileancredit$FlagGB) # Tabulate target variable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;636&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5654&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Training &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; testing samples (Just some basic formality &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Modeling)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chileancredit.train=subset(chileancredit,FlagSample==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chileancredit.test=subset(chileancredit,FlagSample==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Package application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result=smbinning(df=chileancredit.train,y=&lt;span class=&quot;comment&quot;&gt;&quot;FlagGB&quot;&lt;/span&gt;,x=&lt;span class=&quot;comment&quot;&gt;&quot;TOB&quot;&lt;/span&gt;,p=&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;) # Run &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; save result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result$ivtable # Tabulation &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; Information Value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cutpoint CntRec CntGood CntBad CntCumRec CntCumGood CntCumBad PctRec GoodRate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &amp;lt;= &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;1138&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;909&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;1138&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;909&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.2405&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.7988&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;    &amp;lt;= &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;621&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;530&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;91&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;1759&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;1439&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;320&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.1312&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.8535&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;    &amp;lt;= &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;1064&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;985&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;79&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;2823&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;2424&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;399&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.2249&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.9258&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;     &amp;gt; &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;1427&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1377&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;4250&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;3801&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;449&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.3016&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.9650&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  Missing    &lt;span class=&quot;number&quot;&gt;482&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;435&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;4732&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;4236&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;496&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.1019&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.9025&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;    Total   &lt;span class=&quot;number&quot;&gt;4732&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4236&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;496&lt;/span&gt;        &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt;         &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt;        &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1.0000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.8952&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  BadRate    Odds LnOdds     WoE     IV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.2012&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3.9694&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1.3786&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.7662&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.1893&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.1465&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5.8242&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1.7620&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.3828&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.0223&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.0742&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12.4684&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2.5232&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.3784&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.0277&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.0350&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;27.5400&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3.3156&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.1708&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.2626&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.0975&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;9.2553&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2.2252&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.0804&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.0006&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.1048&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8.5403&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2.1448&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.0000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.5025&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Summary IV application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sumivt=smbinning.sumiv(chileancredit.train,y=&lt;span class=&quot;comment&quot;&gt;&quot;FlagGB&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sumivt # &lt;span class=&quot;keyword&quot;&gt;Display&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; with IV by characteristic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Char     IV                  Process&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;         MaxDqBin01 &lt;span class=&quot;number&quot;&gt;2.3771&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;         MaxDqBin02 &lt;span class=&quot;number&quot;&gt;1.8599&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; NonBankTradesDq01 &lt;span class=&quot;number&quot;&gt;1.8129&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; NonBankTradesDq02 &lt;span class=&quot;number&quot;&gt;1.4417&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;         MaxDqBin03 &lt;span class=&quot;number&quot;&gt;1.3856&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt; NonBankTradesDq03 &lt;span class=&quot;number&quot;&gt;1.1819&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;         MaxDqBin04 &lt;span class=&quot;number&quot;&gt;1.0729&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt; NonBankTradesDq04 &lt;span class=&quot;number&quot;&gt;0.8948&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;         MaxDqBin05 &lt;span class=&quot;number&quot;&gt;0.8844&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; NonBankTradesDq05 &lt;span class=&quot;number&quot;&gt;0.7511&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;        MaxDqBin06 &lt;span class=&quot;number&quot;&gt;0.6302&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt; NonBankTradesDq06 &lt;span class=&quot;number&quot;&gt;0.5501&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;                TOB &lt;span class=&quot;number&quot;&gt;0.5025&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;        IncomeLevel &lt;span class=&quot;number&quot;&gt;0.3380&lt;/span&gt;        Factor binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;          MtgBal01 &lt;span class=&quot;number&quot;&gt;0.1452&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;              Bal01 &lt;span class=&quot;number&quot;&gt;0.1379&lt;/span&gt;       Numeric binning OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;         CustomerId     &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;Not&lt;/span&gt; numeric nor factor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;        FlagSample     &lt;span class=&quot;literal&quot;&gt;NA&lt;/span&gt; Uniques values of x &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Plotting smbinning.sumiv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smbinning.sumiv.plot(sumivt,cex=&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;) # Plot IV summary &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/iv.png&quot; alt=&quot;IV&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过IV的大小进行特征排序，从而达到特征选择的目的。&lt;/p&gt;
&lt;h3 id=&quot;3-基于L1正则化的特征变选择在R中的实现：&quot;&gt;&lt;a href=&quot;#3-基于L1正则化的特征变选择在R中的实现：&quot; class=&quot;headerlink&quot; title=&quot;(3) 基于L1正则化的特征变选择在R中的实现：&quot;&gt;&lt;/a&gt;(3) 基于L1正则化的特征变选择在R中的实现：&lt;/h3&gt;&lt;p&gt;R语言中glmnet包可以实现L1正则化、L2正则化的分类与回归模型。&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(glmnet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(ISLR)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hitters=na.omit(Hitters)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=model.&lt;span class=&quot;built_in&quot;&gt;matrix&lt;/span&gt;(Salary~.,data=Hitters)[,-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y=Hitters$Salary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;grid&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;^seq(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lasso.model=glmnet(x,y,alpha=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;lambda&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;grid&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#交叉验证，选择最优的&lt;span class=&quot;built_in&quot;&gt;lambda&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cv&lt;/span&gt;.out=&lt;span class=&quot;built_in&quot;&gt;cv&lt;/span&gt;.glmnet(x,y,alpha=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;lambda&lt;/span&gt;=&lt;span class=&quot;built_in&quot;&gt;grid&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bestlam=&lt;span class=&quot;built_in&quot;&gt;cv&lt;/span&gt;.out$&lt;span class=&quot;built_in&quot;&gt;lambda&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lasso.model2=glmnet(x,y,alpha=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;lambda&lt;/span&gt;=bestlam)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coef(lasso.model2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;sparse&lt;/span&gt; Matrix of class &lt;span class=&quot;string&quot;&gt;&quot;dgCMatrix&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     s0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(Intercept)  &lt;span class=&quot;number&quot;&gt;24.6396990&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AtBat         .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hits          &lt;span class=&quot;number&quot;&gt;1.8499834&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HmRun         .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Runs          .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RBI           .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Walks         &lt;span class=&quot;number&quot;&gt;2.1959762&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Years         .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CAtBat        .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CHits         .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CHmRun        .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CRuns         &lt;span class=&quot;number&quot;&gt;0.2058514&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CRBI          &lt;span class=&quot;number&quot;&gt;0.4095910&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CWalks        .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LeagueN       .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DivisionW   -&lt;span class=&quot;number&quot;&gt;99.9733911&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PutOuts       &lt;span class=&quot;number&quot;&gt;0.2158910&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Assists       .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Errors        .        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NewLeagueN     .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过这个实验可以看出，lasso的系数结果是稀疏的，19个预测变量中13个的系数为0。即使用交叉验证选择$\lambda$值建立的lasso模型仅包含6个预测变量。&lt;/p&gt;
&lt;h3 id=&quot;4-基于树模型的特征选择在R中的实现：&quot;&gt;&lt;a href=&quot;#4-基于树模型的特征选择在R中的实现：&quot; class=&quot;headerlink&quot; title=&quot;(4) 基于树模型的特征选择在R中的实现：&quot;&gt;&lt;/a&gt;(4) 基于树模型的特征选择在R中的实现：&lt;/h3&gt;&lt;p&gt;在R语言中，基于树的模型，如随机森林、GBDT、XGBOOST等都可以输出变量的重要度，以随机森林为例。&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;library(&lt;span class=&quot;name&quot;&gt;randomForest&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(&lt;span class=&quot;name&quot;&gt;mlbench&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# load the data  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data(&lt;span class=&quot;name&quot;&gt;PimaIndiansDiabetes&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rf &amp;lt;- randomForest(&lt;span class=&quot;name&quot;&gt;x=PimaIndiansDiabetes&lt;/span&gt;[,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          y=PimaIndiansDiabetes[,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],importance = T,ntree=500) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;barplot(&lt;span class=&quot;name&quot;&gt;rf&lt;/span&gt;$importance[,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;],main=&lt;span class=&quot;string&quot;&gt;&quot;输入重要性指标的柱形图&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;varImpPlot(&lt;span class=&quot;name&quot;&gt;rf&lt;/span&gt;,sort=TRUE,n.var=nrow(&lt;span class=&quot;name&quot;&gt;rf&lt;/span&gt;$importance))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/bar.png&quot; alt=&quot;输入重要性指标&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/rf.png&quot; alt=&quot;平均精确率减少与平均不纯度减少&quot;&gt;&lt;/p&gt;
&lt;p&gt;随机森林是基于决策树的集成模型，通过上图，我们可以很清楚地发现重要的特征。&lt;/p&gt;
&lt;p&gt;###　(5)基于递归特征消除法的特征选择在R中的实现：&lt;/p&gt;
&lt;p&gt;在R中，caret包可以使用递归特征消除法，主要使用rfe函数。&lt;/p&gt;
&lt;p&gt;rfe参数说明：&lt;/p&gt;
&lt;p&gt;x，预测变量的矩阵或数据框&lt;/p&gt;
&lt;p&gt;y，输出结果向量（数值型或因子型）&lt;/p&gt;
&lt;p&gt;sizes，用于测试的特定子集大小的整型向量&lt;/p&gt;
&lt;p&gt;rfeControl，用于指定预测模型和方法的一系列选项&lt;/p&gt;
&lt;p&gt;一些列函数可以用于rfeControl$functions，包括：线性回归（lmFuncs），随机森林（rfFuncs），朴素贝叶斯(nbFuncs)，bagged trees（treebagFuncs)和可以用于caret的train函数的函数（caretFuncs）。&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#ensure the results are repeatable  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.seed(7)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#load &lt;span class=&quot;comment&quot;&gt;the library&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(mlbench)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;library(caret)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# load &lt;span class=&quot;comment&quot;&gt;the data&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data(PimaIndiansDiabetes)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define &lt;span class=&quot;comment&quot;&gt;the control using a random forest selection function&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;control &lt;span class=&quot;comment&quot;&gt;&amp;lt;- rfeControl(functions=rfFuncs, method=&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&quot;cv&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;, number=10)&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# run &lt;span class=&quot;comment&quot;&gt;the RFE algorithm&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results &lt;span class=&quot;comment&quot;&gt;&amp;lt;- rfe(PimaIndiansDiabetes[,1:8],&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               PimaIndiansDiabetes[,9], sizes=c(1:8), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               rfeControl=control,metric &lt;span class=&quot;comment&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;Accuracy&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;,ntree=100)&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#summarize &lt;span class=&quot;comment&quot;&gt;the results&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(results)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Recursive &lt;span class=&quot;comment&quot;&gt;feature selection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Outer &lt;span class=&quot;comment&quot;&gt;resampling method: Cross-Validated (10 fold)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Resampling &lt;span class=&quot;comment&quot;&gt;performance over subset size:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;Variables&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;Accuracy  Kappa AccuracySD KappaSD Selected&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         1   0.7082 0.3030    0.04902  0.1181         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         2   0.7330 0.3920    0.06703  0.1564         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         3   0.7409 0.4115    0.06525  0.1582         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         4   0.7512 0.4409    0.06988  0.1691         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         5   0.7553 0.4452    0.07909  0.1911         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         6   0.7618 0.4583    0.08094  0.1897         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         7   0.7631 0.4620    0.08448  0.1927        *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         8   0.7617 0.4615    0.07810  0.1789         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The &lt;span class=&quot;comment&quot;&gt;top 5 variables (out of 7):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   glucose, mass, age, pregnant, pedigree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#list &lt;span class=&quot;comment&quot;&gt;the chosen features&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;predictors(results)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1] &lt;span class=&quot;string&quot;&gt;&quot;glucose&quot;&lt;/span&gt;  &lt;span class=&quot;string&quot;&gt;&quot;mass&quot;&lt;/span&gt;     &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;      &lt;span class=&quot;string&quot;&gt;&quot;pregnant&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pedigree&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;insulin&quot;&lt;/span&gt;  &lt;span class=&quot;string&quot;&gt;&quot;triceps&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#plot &lt;span class=&quot;comment&quot;&gt;the results&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(results, type=c(&lt;span class=&quot;string&quot;&gt;&quot;g&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;o&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/rfe.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;从案例中可以看出，通过递归特征消除，发现用所有变量中的某7个自变量的模型是最好的，并且找出了最重要的5个特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;4-结束语&quot;&gt;&lt;a href=&quot;#4-结束语&quot; class=&quot;headerlink&quot; title=&quot;4  结束语&quot;&gt;&lt;/a&gt;4  结束语&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;特征工程是门艺术，也是每一个数据科学家的必修课，因此每个数据科学家既应该像一个统计学家和工程师，又应该像一个艺术家。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;[1] Dash M, Liu H. Feature selection for classification[J]. Intelligent data analysis, 1997, 1(3): 131-156.&lt;/p&gt;
&lt;p&gt;[2]&lt;a href=&quot;http://blog.datadive.net/selecting-good-features-part-i-univariate-selection/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.datadive.net/selecting-good-features-part-i-univariate-selection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3]&lt;a href=&quot;http://blog.datadive.net/selecting-good-features-part-ii-linear-models-and-regularization/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.datadive.net/selecting-good-features-part-ii-linear-models-and-regularization/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4]&lt;a href=&quot;http://blog.datadive.net/selecting-good-features-part-iii-random-forests/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.datadive.net/selecting-good-features-part-iii-random-forests/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[5]&lt;a href=&quot;http://blog.datadive.net/selecting-good-features-part-iv-stability-selection-rfe-and-everything-side-by-side/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.datadive.net/selecting-good-features-part-iv-stability-selection-rfe-and-everything-side-by-side/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[6]&lt;a href=&quot;http://scikit-learn.org/stable/modules/feature_selection.html#univariate-feature-selection&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://scikit-learn.org/stable/modules/feature_selection.html#univariate-feature-selection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[7]&lt;a href=&quot;http://blog.csdn.net/qtlyx/article/details/50780400&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/qtlyx/article/details/50780400&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[8]&lt;a href=&quot;http://minepy.readthedocs.io/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://minepy.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[9]&lt;a href=&quot;https://cran.r-project.org/web/packages/minerva/minerva.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cran.r-project.org/web/packages/minerva/minerva.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[10]&lt;a href=&quot;http://machinelearningmastery.com/discover-feature-engineering-how-to-engineer-features-and-how-to-get-good-at-it/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://machinelearningmastery.com/discover-feature-engineering-how-to-engineer-features-and-how-to-get-good-at-it/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[11]&lt;a href=&quot;http://www.analyticsvidhya.com/blog/2016/03/select-important-variables-boruta-package/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.analyticsvidhya.com/blog/2016/03/select-important-variables-boruta-package/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[12]&lt;a href=&quot;https://www.zhihu.com/question/28641663&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/question/28641663&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[13]&lt;a href=&quot;https://cran.r-project.org/web/packages/smbinning/smbinning.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cran.r-project.org/web/packages/smbinning/smbinning.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[14]&lt;a href=&quot;http://www.scoringmodeling.com/rpackage/smbinning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.scoringmodeling.com/rpackage/smbinning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[15]蒋杭进. 最大信息系数及其在脑网络分析中的应用[D]. 中国科学院研究生院 (武汉物理与数学研究所), 2013.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;1-特征选择的概述&quot;&gt;&lt;a href=&quot;#1-特征选择的概述&quot; class=&quot;headerlink&quot; title=&quot;1.特征选择的概述&quot;&gt;&lt;/a&gt;1.特征选择的概述&lt;/h2&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;1-1-特征工程的简
    
    </summary>
    
      <category term="机器学习" scheme="http://yunxileo.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="特征选择" scheme="http://yunxileo.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%89%B9%E5%BE%81%E9%80%89%E6%8B%A9/"/>
    
    
      <category term="-特征选择" scheme="http://yunxileo.github.io/tags/%E7%89%B9%E5%BE%81%E9%80%89%E6%8B%A9/"/>
    
  </entry>
  
  <entry>
    <title>缺失值处理</title>
    <link href="http://yunxileo.github.io/2016/05/19/%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/"/>
    <id>http://yunxileo.github.io/2016/05/19/缺失值处理/</id>
    <published>2016-05-19T09:37:41.000Z</published>
    <updated>2016-05-19T09:43:20.913Z</updated>
    
    <content type="html">&lt;h2 id=&quot;数据缺失的概念&quot;&gt;&lt;a href=&quot;#数据缺失的概念&quot; class=&quot;headerlink&quot; title=&quot;数据缺失的概念&quot;&gt;&lt;/a&gt;数据缺失的概念&lt;/h2&gt;&lt;p&gt;数据缺失是指在数据采集时由于某种原因应该得到而没有得到的数据。它指的是现有数据集中某个或某些属性的值是不完全的 。&lt;/p&gt;
&lt;h2 id=&quot;数据缺失机制&quot;&gt;&lt;a href=&quot;#数据缺失机制&quot; class=&quot;headerlink&quot; title=&quot;数据缺失机制&quot;&gt;&lt;/a&gt;数据缺失机制&lt;/h2&gt;&lt;p&gt;在对缺失数据进行处理前，了解数据缺失的机制和形式是十分必要的。将数据集中不含缺失值的变量（属性）称为完全变量，数据集中含有缺失值的变量称为不完全变量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全随机缺失（Missing Completely At Random,MCAR）：数据的缺失与不完全变量以及完全变量都是无关的。换句话说，某变量缺失值的出现完全是个随机事件。可以将存在MCAR变量的数据看做是假定完整数据的一个随机样本。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;随机缺失（Missing At Random,MAR）：数据的缺失不是完全随机的，数据的缺失只依赖于完全变量。例如，在一次测试中，如果IQ达不到最低要求的100分，那么将不能参加随后的人格测验。在人格测验上因为IQ低于100分而产生的缺失值为MAR。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;完全非随机缺失(Missing Not At Random,MNAR)：数据的缺失与完全变量自身有关，这种缺失是不可忽略的。例如，公司新录用了20名员工，由于6名员工表现较差在试用期内辞退，试用期结束后的表现评定中，辞退的6名员工的表现分即为非随机缺失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从缺失值的所属属性上讲，如果所有的缺失值都是同一属性，那么这种缺失成为单值缺失，如果缺失值属于不同的属性，称为任意缺失。另外对于时间序列类的数据，可能存在随着时间的缺失，这种缺失称为单调缺失。&lt;/p&gt;
&lt;h2 id=&quot;数据缺失的处理方法&quot;&gt;&lt;a href=&quot;#数据缺失的处理方法&quot; class=&quot;headerlink&quot; title=&quot;数据缺失的处理方法&quot;&gt;&lt;/a&gt;数据缺失的处理方法&lt;/h2&gt;&lt;p&gt;缺失值处理的方法大致分为这几类：1、删除法；2、加权方法；3、基于插补的方法；4、基于模型的方法。&lt;/p&gt;
&lt;h3 id=&quot;删除法&quot;&gt;&lt;a href=&quot;#删除法&quot; class=&quot;headerlink&quot; title=&quot;删除法&quot;&gt;&lt;/a&gt;删除法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;删除观察样本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将存在缺失数据的样本删除，从而得到一个完备的数据集。这种方法简单易行，在对象有多个属性缺失值、被删除的含缺失值的对象与信息表中的数据量相比非常小的情况下是非常有效的。但是，在数据集中本来包含的样本很少的情况下，删除少量对象就足以严重影响数据的客观性和结果的正确性，因此，当缺失数据所占比例较大，特别当缺失数据是非随机分布时，这种方法可能导致数据发生偏离，从而导致错误的结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当某个变量缺失值较多，且对研究目标影响不大，可以将变量整体删除。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变权重&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当删除缺失数据会改变数据结构时，通过对完整数据按照不同的权重进行加权，可以降低删除缺失数据带来的偏差。&lt;/p&gt;
&lt;p&gt;删除法具有很大的局限性，它是以减少历史数据来换取信息的完备，会造成资源的大量浪费，丢弃了大量隐藏在这些对象中的信息。&lt;/p&gt;
&lt;h3 id=&quot;加权方法&quot;&gt;&lt;a href=&quot;#加权方法&quot; class=&quot;headerlink&quot; title=&quot;加权方法&quot;&gt;&lt;/a&gt;加权方法&lt;/h3&gt;&lt;p&gt;在进行抽样调查时，被调查者拒绝配合，会造成不响应调查现象。无不响应的抽样调查数据的随机化的推断，通常用它们的设计权加权抽取的单元。设计权是反比于它们的选取概率。设$y_{i}$是变量Y在总体中单元i的值，总体均值常用Horvitz-Thompson估计量进行估计&lt;br&gt;$$(\sum_{i=1}^{n} \pi_{i}^{-1} y_{i})(\sum_{i=1}^{n} \pi_{i}^{-1})^{-1}$$&lt;br&gt;其中$\pi_i$是单元i进入样本的已知概率，对不响应的加权方法是调整权以适应抽样设计时预料到的不响应。用&lt;br&gt;
$$(\sum_{i=1}^{n}(\pi_{i} \hat{p}_{i})^{-1} y_{i} /\sum_{i=1}^{n}(\pi_{i} \hat{p}_i)^{-1}$$&lt;br&gt;替代Horvitz-Thompson估计量。${\hat{p}}_{i}$是单元i响应的概率的一个估计，通常它是样本的一个子类中的响应单元比例。&lt;/p&gt;
&lt;h3 id=&quot;基于插补的方法&quot;&gt;&lt;a href=&quot;#基于插补的方法&quot; class=&quot;headerlink&quot; title=&quot;基于插补的方法&quot;&gt;&lt;/a&gt;基于插补的方法&lt;/h3&gt;&lt;h4 id=&quot;单一插补&quot;&gt;&lt;a href=&quot;#单一插补&quot; class=&quot;headerlink&quot; title=&quot;单一插补&quot;&gt;&lt;/a&gt;单一插补&lt;/h4&gt;&lt;p&gt;单一插补指对每个缺失值，从其预测分布中取一个值填充缺失值后，使用标准的完全数据进行分析处理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;均值插补&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;均值插补是在处理数据时可以把变量分为数值型和非数值型，如果是非数值型的缺失数据，运用统计学中众数的原理，用此变量在其他对象中取值频数最多的值来填充缺失值；如果是数值型的缺失值，则取此变量在其他所有对象的取值均值来补齐缺失值，这种方法只能在缺失值是完全随机缺失时为总体均值或总量提供无偏估计。但此方法使得插补值集中在均值点上，在分布上容易形成尖峰，导致方差被低估。可根据一定的辅助变量，将样本分成多个部分，然后在每一部分上分别使用均值插补，称为局部均值插补。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用哑变量进行调整&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对缺失值创建一个指标，即设一个哑变量，1表示观测数据中存在缺失值，0表示观测数据中不存在缺失值，对缺失数据进行特定值的插补（如均值插补），这样做的好处是在缺失值处理时使用了全部变量的信息，但这样会导致估计有偏。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;热平台插补&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个包含空值的变量，本方法是在完整数据中找到一个与空值最相似的变量，然后用这个相似的值来进行填充。与均值插补法相比，热平台插补简单易懂还可以保持数据本身的类型，利用本方法填充数据后，其变量值与填充前很接近。它的主要缺点是不能覆盖已有数据没有反应的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冷平台插补&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;冷平台插补与热平台插补类似，但它是从过去的调查数据（如前期的调查数据或历史数据）中获得信息进行插补。冷平台插补同样不能消除估计的偏差。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k-means插补&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用辅助变量（即无缺失值的变量），定义样本间的距离函数，寻找与缺失值样本距离最近的无缺失值的n个样本，利用这n个样本的加权平均值来估计缺失数据。即利用聚类模型预测缺失变量的类型，再以该类型的均值进行插补，但这种方法在模型中引入了自相关，容易给后面的分析工作造成障碍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;期望最大化（EM算法）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该算法的特点是通过数据扩张，将不完全数据的处理问题转化为对完全数据的处理问题，且通过假设隐变量的存在，简化似然方程，将比较复杂的似然函数极大似然估计问题转化为比较简单的极大似然估计问题。通过以下步骤实现：1、用估计值替代缺失值；2、参数估计；3、假定2中的参数估计值是正确的，再对缺失值进行估计；4、再估计缺失值。&lt;/p&gt;
&lt;h4 id=&quot;随机插补&quot;&gt;&lt;a href=&quot;#随机插补&quot; class=&quot;headerlink&quot; title=&quot;随机插补&quot;&gt;&lt;/a&gt;随机插补&lt;/h4&gt;&lt;p&gt;随机插补是在均值插补的基础上加上随机项，通过增加缺失值的随机性来改善缺失值分布过于集中的缺陷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;贝叶斯Boostap方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;贝叶斯Boostap方法主要包括两步：1、从（0,1）均匀分布中随机抽取k-1个随机数，并进行排序记为$a_{1},a_{2},\cdots,a_{k-1}$，并且使得$a_{0}=0$且$a_{k}=1$，其中k是观测值的数目；2、对n个缺失值，分别从观测数据$x_{1},\cdots,x_{k}$中以概率$(a_{1}-a_{0}),(a_{2}-a_{1}),\cdots,(1-a_{k-1})$抽取一个值进行插补。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;近似贝叶斯Boostap方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;近似贝叶斯Boostap方法首先从k个观测数据集$x_{1},\cdots,x_{k}$中有放回的抽取$k^{&lt;em&gt;}$个观测值建立一个新的数据集$x^{&lt;/em&gt;}$，对于n个缺失值，从数据集$x^{*}$中随机抽取n个值进行插补。&lt;/p&gt;
&lt;p&gt;单一插补是标准的完全数据分析方法，要优于传统的忽略缺失值的思想，使得后续的统计分析可以在完整的数据集上进行，但单一插补的插补数据都是唯一的,插补结果扭曲了样本中变量的分布，容易低估估计量的方差。&lt;/p&gt;
&lt;h4 id=&quot;多重插补&quot;&gt;&lt;a href=&quot;#多重插补&quot; class=&quot;headerlink&quot; title=&quot;多重插补&quot;&gt;&lt;/a&gt;多重插补&lt;/h4&gt;&lt;p&gt;与单一插补方法相比较，多重插补方法充分地考虑了数据的不确定性。多重插补的主要分为三个步骤，综合起来即为：插补、分析、合并。插补步是为每个缺失值都构造出 m 个可能的插补值，缺失模型具有不确定性，这些插补值能体现出模型的这个性质，利用这些可能插补值对缺失值进行插补就得到了 m 个完整数据集。分析步是对插补后的 m 个完整数据集使用一样的统计数据分析方法进行分析，同时得到 m 个统计结果。综合步就是把得到的这 m 个统计结果综合起来得到的分析结果，把这个分析结果作为缺失值的替代值。多重插补构造多个插补值主要是通过模拟的方式对估计量的分布进行推测，然后采用不同的模型对缺失值进行插补，这种插补是随机抽取的方式，这样以来能提高估计的有效性和可靠性。&lt;/p&gt;
&lt;p&gt;多重插补法主要有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PMM法(Predictive Mean Matching,PMM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PMM法也称随机回归插补法,它是回归插补法的变形,插补值是由回归模型的的预测值加上一个随机产生的误差项结合而成.一般而言,对应于某种确定性的插补方法,可以产生出相应的随机性插补方法.它的优点是能够在正态性假设不成立的情况下插补适当的值,缺点是随机误差项的确定比较困难.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;趋势得分法(Propensity    Score, PS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;趋势得分是在给定观测协变量时分配给一个特殊处理的条件概率，它对每个有缺失值的变量产生一个趋势得分来表示观测缺失的概率。之后,根据这些趋势得分,把观测分组,最后再对每一组数据应用近似贝叶斯Bootstrap插补。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;马尔科夫链蒙特卡罗法(Markov Chain Monte Carlo,MCMC)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MCMC方法是蒙特卡洛重要抽样, 是流行的贝叶斯分析方法中计算后验期望的方法。一般地,MCMC将缺失数据视为参数,然后将这些参数纳入抽样的范围即可。MCMC方法对缺失数据的处理相对灵活、简单易行。&lt;/p&gt;
&lt;p&gt;多重插补方法有着其他插补方法所不具备的独特优势，第一，与其他方法相比较，多重插补方法能够尽可能的利用其他辅助信息，给出多个替代值，保持了估计结果的不确定性的大量信息；第二，多重插补方法能够尽可能接近真实情况下去模拟缺失数据的分布，在这样的条件下能够尽可能的保持变量之间的原始关系；第三，在多重插补的插补步骤会产生多个插补值，这样以来就可以利用这些不同的替代值来进一步反映无回答的不确定性。&lt;/p&gt;
&lt;h4 id=&quot;几何插补&quot;&gt;&lt;a href=&quot;#几何插补&quot; class=&quot;headerlink&quot; title=&quot;几何插补&quot;&gt;&lt;/a&gt;几何插补&lt;/h4&gt;&lt;p&gt;几何插补就是从几何的观点来研究插补，在可忽略的缺失机制下，假定观测数据的主成分与完全数据的主成分相同，那么可以通过寻找观测数据的主成分进行插补，换句话说就是用逼近观测数据的方法去插补缺失数据。&lt;/p&gt;
&lt;h3 id=&quot;基于模型的方法&quot;&gt;&lt;a href=&quot;#基于模型的方法&quot; class=&quot;headerlink&quot; title=&quot;基于模型的方法&quot;&gt;&lt;/a&gt;基于模型的方法&lt;/h3&gt;&lt;p&gt;这类方法适用于大多数场合。一般对观测数据定义一个模型，然后在模型下根据适当的分布做推断。这个方法的优势就是灵活：回避特殊情况的方法，在模型假定基础上产生的方法可以进行推演和评价；以及考虑数据不完整性时方差分析的可用性。&lt;/p&gt;
&lt;p&gt;基于模型的方法既不是删除缺失值也不是采用插补方法去补全缺失值，而是首先要考虑缺失数据的缺失机制，在此基础上为部分缺失数据定义模型，模型的参数可以通过极大似然或极大后验估计，以完全信息极大似然估计为例，这是基于模型的方法，可直接用于不完全数据的分析的，最大的特点在于即使缺失数据不是完全随机缺失，估计的结果也是无偏的。完全信息极大似然估计是建立在对数极大似然估计基础上的，假定数据来源于多元正态分布，对于不完全服从多元正态的数据还是稳健的极大似然估计的不足之处在于需要相对比较大的数据集，而且可供推断的信息是有限的。当样本量太小时，不宜采用完全信息极大似然估计。&lt;/p&gt;
&lt;h3 id=&quot;不对缺失值进行处理&quot;&gt;&lt;a href=&quot;#不对缺失值进行处理&quot; class=&quot;headerlink&quot; title=&quot;不对缺失值进行处理&quot;&gt;&lt;/a&gt;不对缺失值进行处理&lt;/h3&gt;&lt;p&gt;直接在包含空值的数据上进行数据挖掘。可通过贝叶斯网络和人工神经网络实现。&lt;/p&gt;
&lt;p&gt;贝叶斯网络是用来表示变量间连接概率的图形模式，它提供了一种自然的表示因果信息的方法，用来发现数据间的潜在关系。在这个网络中，用节点表示变量，有向边表示变量间的依赖关系。贝叶斯网络仅适合于对领域知识具有一定了解的情况，至少对变量间的依赖关系较清楚的情况。否则直接从数据中学习贝叶斯网的结构不但复杂性较高（随着变量的增加，指数级增加），网络维护代价昂贵，而且它的估计参数较多，为系统带来了高方差，影响了它的预测精度。当在任何一个对象中的缺失值数量很大时，存在指数爆炸的危险。&lt;/p&gt;
&lt;p&gt;基于神经网络进行缺失数据估计的基本思想是：把同一系统的除待估计参数以外的其它参数的数据作为网络的输入，待估计参数的数据作为输出，利用该系统中的已知数据训练网络，在网络满足要求后，把与待估计的数据同一时间的其它参数的数据输入网络，网络输出值即为缺失数据的估计值。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据缺失的概念&quot;&gt;&lt;a href=&quot;#数据缺失的概念&quot; class=&quot;headerlink&quot; title=&quot;数据缺失的概念&quot;&gt;&lt;/a&gt;数据缺失的概念&lt;/h2&gt;&lt;p&gt;数据缺失是指在数据采集时由于某种原因应该得到而没有得到的数据。它指的是现有数据集中某个或某些属性的值
    
    </summary>
    
      <category term="机器学习" scheme="http://yunxileo.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据预处理" scheme="http://yunxileo.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
    
      <category term="缺失值处理" scheme="http://yunxileo.github.io/tags/%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
</feed>
